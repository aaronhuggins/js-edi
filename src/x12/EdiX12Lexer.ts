import { X12BaseLexer } from './X12BaseLexer'
// Generated from grammar/EdiX12Lexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class EdiX12Lexer extends X12BaseLexer {
	public static readonly SegmentTerminator = 1;
	public static readonly DataSeparator = 2;
	public static readonly ComponentSeparator = 3;
	public static readonly RepititionSeparator = 4;
	public static readonly EndOfLine = 5;
	public static readonly InterchangeHeader = 6;
	public static readonly InterchangeTrailer = 7;
	public static readonly GroupHeader = 8;
	public static readonly GroupTrailer = 9;
	public static readonly TransactionHeader = 10;
	public static readonly TransactionTrailer = 11;
	public static readonly Tag = 12;
	public static readonly Numeric = 13;
	public static readonly Decimal = 14;
	public static readonly String = 15;
	public static readonly Binary = 16;
	public static readonly NonPrintable = 17;
	public static readonly Any = 18;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"SOH", "STX", "ETX", "EOT", "ENQ", "ACK", "BEL", "HT", "LF", "VT", "FF", 
		"CR", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "FS", "GS", "RS", 
		"US", "Number", "Letter", "Special", "EndOfLine", "InterchangeHeader", 
		"InterchangeTrailer", "GroupHeader", "GroupTrailer", "TransactionHeader", 
		"TransactionTrailer", "Tag", "Numeric", "Decimal", "String", "Binary", 
		"NonPrintable", "Any",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, "'ISA'", 
		"'IEA'", "'GS'", "'GE'", "'ST'", "'SE'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "SegmentTerminator", "DataSeparator", "ComponentSeparator", 
		"RepititionSeparator", "EndOfLine", "InterchangeHeader", "InterchangeTrailer", 
		"GroupHeader", "GroupTrailer", "TransactionHeader", "TransactionTrailer", 
		"Tag", "Numeric", "Decimal", "String", "Binary", "NonPrintable", "Any",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(EdiX12Lexer._LITERAL_NAMES, EdiX12Lexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return EdiX12Lexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(EdiX12Lexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "EdiX12Lexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return EdiX12Lexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return EdiX12Lexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return EdiX12Lexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return EdiX12Lexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 39:
			this.Any_action(_localctx, actionIndex);
			break;
		}
	}
	private Any_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			 this.handleAny(EdiX12Lexer) 
			break;
		}
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x14\xE7\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03" +
		"\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11" +
		"\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A" +
		"\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x05\x1C" +
		"\x8D\n\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03" +
		"\x1E\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03!\x03!\x03!\x03\"\x03\"" +
		"\x03\"\x03#\x03#\x03#\x05#\xA6\n#\x03#\x03#\x05#\xAA\n#\x03#\x03#\x05" +
		"#\xAE\n#\x03#\x03#\x05#\xB2\n#\x03$\x03$\x06$\xB6\n$\r$\x0E$\xB7\x03%" +
		"\x03%\x06%\xBC\n%\r%\x0E%\xBD\x03&\x03&\x03&\x06&\xC3\n&\r&\x0E&\xC4\x03" +
		"\'\x06\'\xC8\n\'\r\'\x0E\'\xC9\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03" +
		"(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03" +
		"(\x03(\x05(\xE3\n(\x03)\x03)\x03)\x02\x02\x02*\x03\x02\x02\x05\x02\x02" +
		"\x07\x02\x02\t\x02\x02\v\x02\x02\r\x02\x02\x0F\x02\x02\x11\x02\x02\x13" +
		"\x02\x02\x15\x02\x02\x17\x02\x02\x19\x02\x02\x1B\x02\x02\x1D\x02\x02\x1F" +
		"\x02\x02!\x02\x02#\x02\x02%\x02\x02\'\x02\x02)\x02\x02+\x02\x02-\x02\x02" +
		"/\x02\x021\x02\x023\x02\x025\x02\x027\x02\x079\x02\b;\x02\t=\x02\n?\x02" +
		"\vA\x02\fC\x02\rE\x02\x0EG\x02\x0FI\x02\x10K\x02\x11M\x02\x12O\x02\x13" +
		"Q\x02\x14\x03\x02\x05\x03\x022;\x04\x02C\\c|\x07\x02\"1<B]_aa}\x80\x02" +
		"\xF0\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02" +
		"=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02" +
		"\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02" +
		"\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03" +
		"\x02\x02\x02\x03S\x03\x02\x02\x02\x05U\x03\x02\x02\x02\x07W\x03\x02\x02" +
		"\x02\tY\x03\x02\x02\x02\v[\x03\x02\x02\x02\r]\x03\x02\x02\x02\x0F_\x03" +
		"\x02\x02\x02\x11a\x03\x02\x02\x02\x13c\x03\x02\x02\x02\x15e\x03\x02\x02" +
		"\x02\x17g\x03\x02\x02\x02\x19i\x03\x02\x02\x02\x1Bk\x03\x02\x02\x02\x1D" +
		"m\x03\x02\x02\x02\x1Fo\x03\x02\x02\x02!q\x03\x02\x02\x02#s\x03\x02\x02" +
		"\x02%u\x03\x02\x02\x02\'w\x03\x02\x02\x02)y\x03\x02\x02\x02+{\x03\x02" +
		"\x02\x02-}\x03\x02\x02\x02/\x7F\x03\x02\x02\x021\x81\x03\x02\x02\x023" +
		"\x83\x03\x02\x02\x025\x85\x03\x02\x02\x027\x8C\x03\x02\x02\x029\x8E\x03" +
		"\x02\x02\x02;\x92\x03\x02\x02\x02=\x96\x03\x02\x02\x02?\x99\x03\x02\x02" +
		"\x02A\x9C\x03\x02\x02\x02C\x9F\x03\x02\x02\x02E\xA2\x03\x02\x02\x02G\xB5" +
		"\x03\x02\x02\x02I\xBB\x03\x02\x02\x02K\xC2\x03\x02\x02\x02M\xC7\x03\x02" +
		"\x02\x02O\xE2\x03\x02\x02\x02Q\xE4\x03\x02\x02\x02ST\x07\x03\x02\x02T" +
		"\x04\x03\x02\x02\x02UV\x07\x04\x02\x02V\x06\x03\x02\x02\x02WX\x07\x05" +
		"\x02\x02X\b\x03\x02\x02\x02YZ\x07\x06\x02\x02Z\n\x03\x02\x02\x02[\\\x07" +
		"\x07\x02\x02\\\f\x03\x02\x02\x02]^\x07\b\x02\x02^\x0E\x03\x02\x02\x02" +
		"_`\x07\t\x02\x02`\x10\x03\x02\x02\x02ab\x07\v\x02\x02b\x12\x03\x02\x02" +
		"\x02cd\x07\f\x02\x02d\x14\x03\x02\x02\x02ef\x07\r\x02\x02f\x16\x03\x02" +
		"\x02\x02gh\x07\x0E\x02\x02h\x18\x03\x02\x02\x02ij\x07\x0F\x02\x02j\x1A" +
		"\x03\x02\x02\x02kl\x07\x13\x02\x02l\x1C\x03\x02\x02\x02mn\x07\x14\x02" +
		"\x02n\x1E\x03\x02\x02\x02op\x07\x15\x02\x02p \x03\x02\x02\x02qr\x07\x16" +
		"\x02\x02r\"\x03\x02\x02\x02st\x07\x17\x02\x02t$\x03\x02\x02\x02uv\x07" +
		"\x18\x02\x02v&\x03\x02\x02\x02wx\x07\x19\x02\x02x(\x03\x02\x02\x02yz\x07" +
		"\x1E\x02\x02z*\x03\x02\x02\x02{|\x07\x1F\x02\x02|,\x03\x02\x02\x02}~\x07" +
		" \x02\x02~.\x03\x02\x02\x02\x7F\x80\x07!\x02\x02\x800\x03\x02\x02\x02" +
		"\x81\x82\t\x02\x02\x02\x822\x03\x02\x02\x02\x83\x84\t\x03\x02\x02\x84" +
		"4\x03\x02\x02\x02\x85\x86\t\x04\x02\x02\x866\x03\x02\x02\x02\x87\x88\x05" +
		"\x19\r\x02\x88\x89\x05\x13\n\x02\x89\x8D\x03\x02\x02\x02\x8A\x8D\x05\x19" +
		"\r\x02\x8B\x8D\x05\x13\n\x02\x8C\x87\x03\x02\x02\x02\x8C\x8A\x03\x02\x02" +
		"\x02\x8C\x8B\x03\x02\x02\x02\x8D8\x03\x02\x02\x02\x8E\x8F\x07K\x02\x02" +
		"\x8F\x90\x07U\x02\x02\x90\x91\x07C\x02\x02\x91:\x03\x02\x02\x02\x92\x93" +
		"\x07K\x02\x02\x93\x94\x07G\x02\x02\x94\x95\x07C\x02\x02\x95<\x03\x02\x02" +
		"\x02\x96\x97\x07I\x02\x02\x97\x98\x07U\x02\x02\x98>\x03\x02\x02\x02\x99" +
		"\x9A\x07I\x02\x02\x9A\x9B\x07G\x02\x02\x9B@\x03\x02\x02\x02\x9C\x9D\x07" +
		"U\x02\x02\x9D\x9E\x07V\x02\x02\x9EB\x03\x02\x02\x02\x9F\xA0\x07U\x02\x02" +
		"\xA0\xA1\x07G\x02\x02\xA1D\x03\x02\x02\x02\xA2\xA5\x053\x1A\x02\xA3\xA6" +
		"\x053\x1A\x02\xA4\xA6\x051\x19\x02\xA5\xA3\x03\x02\x02\x02\xA5\xA4\x03" +
		"\x02\x02\x02\xA6\xA9\x03\x02\x02\x02\xA7\xAA\x053\x1A\x02\xA8\xAA\x05" +
		"1\x19\x02\xA9\xA7\x03\x02\x02\x02\xA9\xA8\x03\x02\x02\x02\xAA\xAD\x03" +
		"\x02\x02\x02\xAB\xAE\x053\x1A\x02\xAC\xAE\x051\x19\x02\xAD\xAB\x03\x02" +
		"\x02\x02\xAD\xAC\x03\x02\x02\x02\xAE\xB1\x03\x02\x02\x02\xAF\xB2\x053" +
		"\x1A\x02\xB0\xB2\x051\x19\x02\xB1\xAF\x03\x02\x02\x02\xB1\xB0\x03\x02" +
		"\x02\x02\xB2F\x03\x02\x02\x02\xB3\xB6\x07/\x02\x02\xB4\xB6\x051\x19\x02" +
		"\xB5\xB3\x03\x02\x02\x02\xB5\xB4\x03\x02\x02\x02\xB6\xB7\x03\x02\x02\x02" +
		"\xB7\xB5\x03\x02\x02\x02\xB7\xB8\x03\x02\x02\x02\xB8H\x03\x02\x02\x02" +
		"\xB9\xBC\x070\x02\x02\xBA\xBC\x05G$\x02\xBB\xB9\x03\x02\x02\x02\xBB\xBA" +
		"\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02\xBD\xBB\x03\x02\x02\x02\xBD\xBE" +
		"\x03\x02\x02\x02\xBEJ\x03\x02\x02\x02\xBF\xC3\x053\x1A\x02\xC0\xC3\x05" +
		"G$\x02\xC1\xC3\x055\x1B\x02\xC2\xBF\x03\x02\x02\x02\xC2\xC0\x03\x02\x02" +
		"\x02\xC2\xC1\x03\x02\x02\x02\xC3\xC4\x03\x02\x02\x02\xC4\xC2\x03\x02\x02" +
		"\x02\xC4\xC5\x03\x02\x02\x02\xC5L\x03\x02\x02\x02\xC6\xC8\x04\x02\u0101" +
		"\x02\xC7\xC6\x03\x02\x02\x02\xC8\xC9\x03\x02\x02\x02\xC9\xC7\x03\x02\x02" +
		"\x02\xC9\xCA\x03\x02\x02\x02\xCAN\x03\x02\x02\x02\xCB\xE3\x05\x03\x02" +
		"\x02\xCC\xE3\x05\x05\x03\x02\xCD\xE3\x05\x07\x04\x02\xCE\xE3\x05\t\x05" +
		"\x02\xCF\xE3\x05\v\x06\x02\xD0\xE3\x05\r\x07\x02\xD1\xE3\x05\x0F\b\x02" +
		"\xD2\xE3\x05\x11\t\x02\xD3\xE3\x05\x13\n\x02\xD4\xE3\x05\x15\v\x02\xD5" +
		"\xE3\x05\x17\f\x02\xD6\xE3\x05\x19\r\x02\xD7\xE3\x05\x1B\x0E\x02\xD8\xE3" +
		"\x05\x1D\x0F\x02\xD9\xE3\x05\x1F\x10\x02\xDA\xE3\x05!\x11\x02\xDB\xE3" +
		"\x05#\x12\x02\xDC\xE3\x05%\x13\x02\xDD\xE3\x05\'\x14\x02\xDE\xE3\x05)" +
		"\x15\x02\xDF\xE3\x05+\x16\x02\xE0\xE3\x05-\x17\x02\xE1\xE3\x05/\x18\x02" +
		"\xE2\xCB\x03\x02\x02\x02\xE2\xCC\x03\x02\x02\x02\xE2\xCD\x03\x02\x02\x02" +
		"\xE2\xCE\x03\x02\x02\x02\xE2\xCF\x03\x02\x02\x02\xE2\xD0\x03\x02\x02\x02" +
		"\xE2\xD1\x03\x02\x02\x02\xE2\xD2\x03\x02\x02\x02\xE2\xD3\x03\x02\x02\x02" +
		"\xE2\xD4\x03\x02\x02\x02\xE2\xD5\x03\x02\x02\x02\xE2\xD6\x03\x02\x02\x02" +
		"\xE2\xD7\x03\x02\x02\x02\xE2\xD8\x03\x02\x02\x02\xE2\xD9\x03\x02\x02\x02" +
		"\xE2\xDA\x03\x02\x02\x02\xE2\xDB\x03\x02\x02\x02\xE2\xDC\x03\x02\x02\x02" +
		"\xE2\xDD\x03\x02\x02\x02\xE2\xDE\x03\x02\x02\x02\xE2\xDF\x03\x02\x02\x02" +
		"\xE2\xE0\x03\x02\x02\x02\xE2\xE1\x03\x02\x02\x02\xE3P\x03\x02\x02\x02" +
		"\xE4\xE5\v\x02\x02\x02\xE5\xE6\b)\x02\x02\xE6R\x03\x02\x02\x02\x10\x02" +
		"\x8C\xA5\xA9\xAD\xB1\xB5\xB7\xBB\xBD\xC2\xC4\xC9\xE2\x03\x03)\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!EdiX12Lexer.__ATN) {
			EdiX12Lexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(EdiX12Lexer._serializedATN));
		}

		return EdiX12Lexer.__ATN;
	}

}

